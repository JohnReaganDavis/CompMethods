clc
clear

% Define the coefficient matrix and B vector
A = [10, 2, -1; -3, -5, 2; 1, 1, 6];
B = [27; -61.5; -21.5];

%% Using MATLAB's Left Division (Direct Solution)
X_left_division = A \ B;
disp('Solution using MATLAB Left Division:');
disp(X_left_division);

%% Gaussian Elimination
augmented = [A, B];
n = size(augmented, 1);

% Forward Elimination
for i = 1:n-1
    % Partial pivoting
    [~, max_index] = max(abs(augmented(i:n, i)));
    max_index = max_index + i - 1;
    if i ~= max_index
        augmented([i, max_index], :) = augmented([max_index, i], :);
    end
    
    for j = i+1:n
        factor = augmented(j, i)/augmented(i, i);
        augmented(j, i:n+1) = augmented(j, i:n+1) - factor*augmented(i, i:n+1);
    end
end

% Back Substitution
X_gaussian = zeros(n, 1);
for i = n:-1:1
    X_gaussian(i) = (augmented(i, end) - augmented(i, i+1:n) * X_gaussian(i+1:n)) / augmented(i, i);
end
disp('Solution using Gaussian elimination:');
disp(X_gaussian);

%% Cramer's Rule
det_A = det(A);
X_cramer = zeros(n, 1);
for i = 1:n
    A_temp = A;
    A_temp(:, i) = B;
    X_cramer(i) = det(A_temp) / det_A;
end
disp('Solution using Cramer''s rule:');
disp(X_cramer);
